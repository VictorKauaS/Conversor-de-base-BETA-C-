using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading.Tasks;

namespace A
{
    internal class Program
    {
        static void Main()
        {

            short opcao = 0;

            do
            {
                Console.WriteLine("1 - Converter bases de números");
                Console.WriteLine("2 - Sair");
                opcao = Convert.ToInt16(Console.ReadLine());

                switch (opcao)
                {
                    case 1:
                        Console.Write("Digite o número (logo depois dirá a base dele)..: ");
                        int num=Convert.ToInt32(Console.ReadLine());

                        Console.Write("Digite a base deste número (de 2 a 36)..: ");
                        int numBase = Convert.ToInt32(Console.ReadLine());

                        Console.Write("2 - Digite a base que queira converter este número (de 2 a 36)..: ");
                        int baseConverter = Convert.ToInt32(Console.ReadLine());

                        Console.WriteLine("\nO seu número {0}, na base {1} convertido para a base {2} fica {3}",num,numBase,baseConverter,Converter(numBase, baseConverter, num)); 
                        break;
                    case 2:
                        Console.WriteLine("Volte Sempre!");
                        break;
                    default:
                        Console.WriteLine("Opção inválida.");
                        break;
                }

                Console.WriteLine("\nAperte qualquer tecla para continuar");
                Console.ReadKey();
                Console.Clear();

            } while (opcao != 2);
        }
        static string Converter(int numBase, int baseConverter,int num)
        {
            string convertido = "";
            string numString = Convert.ToString(num);

            if (baseConverter != 10)
            {
                if (numBase == 10)
                {
                    //Converter normalmente de decimal para qualquer outro
                    convertido = ConverterQualquerOutro(num, baseConverter);
                }
                else
                {
                    //Converter para decimal para dps converter para qualquer outro
                    num = ConverterDecimal(numString);
                    convertido = ConverterQualquerOutro(num, baseConverter);
                }
            }
            else
            {
                if(numBase == 10)
                {
                    //Errado pq vai converter decimal para decimal
                    Console.WriteLine("B R U H");
                }
                else
                {
                    //Conversão normal de qualquer outro para decimal
                    convertido = Convert.ToString(ConverterDecimal(numString));
                }
            }

            return convertido;
        }
        static string ConverterQualquerOutro(int num, int baseConverter)
        {
            string convertidoA = "";
            string convertido = "";

            do
            {
                //Console.WriteLine($"{num}/{baseConverter}");
                //Console.WriteLine($"{num % baseConverter} {baseConverter}");
                convertidoA += AlgarismoString(num % baseConverter);
                num /= baseConverter;

            } while (num >= 1);

            for (int i = convertidoA.Length-1; i >= 0; i--)
                convertido += convertidoA[i];

            return convertido;
        }
        static int ConverterDecimal(string numString)
        {
            int soma = 0;
            int indice = 0;

            for (int i = numString.Length-1; i >= 0;i--)
            {
                soma += Convert.ToInt32(Math.Pow(2, indice)) * Algarismo(numString[i]);
                indice++;
            }

            return soma;
        }
        static short Algarismo(char posicao)
        {

            switch(posicao)
            {
                case '0': return 0;
                case '1': return 1;
                case '2': return 2;
                case '3': return 3;
                case '4': return 4;
                case '5': return 5;
                case '6': return 6;
                case '7': return 7;
                case '8': return 8;
                case '9': return 9;
                case 'A': return 10;
                case 'B': return 11;
                case 'C': return 12;
                case 'D': return 13;
                case 'E': return 14;
                case 'F': return 15;
                case 'G': return 16;
                case 'H': return 17;
                case 'I': return 18;
                case 'J': return 19;
                case 'K': return 20;
                case 'L': return 21;
                case 'M': return 22;
                case 'N': return 23;
                case 'O': return 24;
                case 'P': return 25;
                case 'Q': return 26;
                case 'R': return 27;
                case 'S': return 28;
                case 'T': return 29;
                case 'U': return 30;
                case 'V': return 31;
                case 'W': return 32;
                case 'X': return 33;
                case 'Y': return 34;
                case 'Z': return 35;
                default:
                    return 0;
            }
        }
        static string AlgarismoString(int num)
        {

            switch (num)
            {
                case 0: return "0";
                case 1: return "1";
                case 2: return "2";
                case 3: return "3";
                case 4: return "4";
                case 5: return "5";
                case 6: return "6";
                case 7: return "7";
                case 8: return "8";
                case 9: return "9";
                case 10: return "A";
                case 11: return "B";
                case 12: return "C";
                case 13: return "D";
                case 14: return "E";
                case 15: return "F";
                case 16: return "G";
                case 17: return "H";
                case 18: return "I";
                case 19: return "J";
                case 20: return "K";
                case 21: return "L";
                case 22: return "M";
                case 23: return "N";
                case 24: return "O";
                case 25: return "P";
                case 26: return "Q";
                case 27: return "R";
                case 28: return "S";
                case 29: return "T";
                case 30: return "U";
                case 31: return "V";
                case 32: return "W";
                case 33: return "X";
                case 34: return "Y";
                case 35: return "Z";
                
                default:
                    return "0";
            }
        }


    }
}
